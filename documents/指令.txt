1.12.2:

1./particleex funlist(<表达式>可用函数列表)
2./particleex clearcache(清理图片缓存)
3./particleex clearparticle(清理粒子效果)

4./particleex normal <颗粒名> <x> <y> <z> <红> <绿> <蓝> <透明度> <亮度> <vx> <vy> <vz> <dx> <dy> <dz> <数量> [寿命] [速度表达式] [计算间隔] [组] [参数]
5./particleex conditional <颗粒名> <x> <y> <z> <红> <绿> <蓝> <透明度> <亮度> <vx> <vy> <vz> <dx> <dy> <dz> <条件表达式> [计算间隔] [寿命] [速度表达式] [计算间隔] [组] [参数]

6./particleex parameter <颗粒名> <x> <y> <z> <红> <绿> <蓝> <透明度> <亮度> <vx> <vy> <vz> <tStart> <tEnd> <表达式> [计算间隔] [寿命] [速度表达式] [计算间隔] [组] [参数]  //直角坐标
7./particleex polarparameter <颗粒名> <x> <y> <z> <红> <绿> <蓝> <透明度> <亮度> <vx> <vy> <vz> <tStart> <tEnd> <表达式> [计算间隔] [寿命] [速度表达式] [计算间隔] [组] [参数]  //极坐标
8./particleex tickparameter <颗粒名> <x> <y> <z> <红> <绿> <蓝> <透明度> <亮度> <vx> <vy> <vz> <tStart> <tEnd> <表达式> [计算间隔] [CPT] [寿命] [速度表达式] [计算间隔] [组] [参数]  //直角坐标
9./particleex tickpolarparameter <颗粒名> <x> <y> <z> <红> <绿> <蓝> <透明度> <亮度> <vx> <vy> <vz> <tStart> <tEnd> <表达式> [计算间隔] [CPT] [寿命] [速度表达式] [计算间隔] [组] [参数]  //极坐标

10./particleex parameterrgb <颗粒名> <x> <y> <z> <tStart> <tEnd> <表达式> [计算间隔] [寿命] [速度表达式] [计算间隔] [组] [参数]
11./particleex polarparameterrgb <颗粒名> <x> <y> <z> <tStart> <tEnd> <表达式> [计算间隔] [寿命] [速度表达式] [计算间隔] [组] [参数]
12./particleex tickparameterrgb <颗粒名> <x> <y> <z> <tStart> <tEnd> <表达式> [计算间隔] [CPT] [寿命] [速度表达式] [计算间隔] [组] [参数]
13./particleex tickpolarparameterrgb <颗粒名> <x> <y> <z> <tStart> <tEnd> <表达式> [计算间隔] [CPT] [寿命] [速度表达式] [计算间隔] [组] [参数]

14./particleex image <颗粒名> <x> <y> <z> <path> [比例] [x轴旋转] [y轴旋转] [z轴旋转] [翻转] [DPB] [亮度] [vx] [vy] [vz] [寿命] [速度表达式] [计算间隔] [组] [参数]
15./particleex imagematrix <颗粒名> <x> <y> <z> <path> [比例] [矩阵] [DPB] [亮度] [vx] [vy] [vz] [寿命] [速度表达式] [计算间隔] [组] [参数]

16./particleex group remove <组> [条件表达式] [x] [y] [z]
17./particleex group change parameter|speedexpression <组> <表达式> [条件表达式] [x] [y] [z]


1.16.5:

1./particleex funlist(<表达式>可用函数列表)
2./particleex clearcache(清理图片缓存)
3./particleex clearparticle(清理粒子效果)
4./particleex normal <颗粒> <坐标> <颜色> <速度> <范围> <数量> [寿命] [速度表达式] [计算间隔] [组]
5./particleex conditional <颗粒> <坐标> <颜色> <速度> <范围> <条件表达式> [计算间隔] [寿命] [速度表达式] [计算间隔] [组]
6./particleex parameter <颗粒> <坐标> <颜色> <速度> <begin> <end> <表达式> [计算间隔] [寿命] [速度表达式] [计算间隔] [组]
7./particleex polarparameter <颗粒> <坐标> <颜色> <速度> <begin> <end> <表达式> [计算间隔] [寿命] [速度表达式] [计算间隔] [组]
8./particleex tickparameter <颗粒> <坐标> <颜色> <速度> <begin> <end> <表达式> [计算间隔] [CPT] [寿命] [速度表达式] [计算间隔] [组]
9./particleex tickpolarparameter <颗粒> <坐标> <颜色> <速度> <begin> <end> <表达式> [计算间隔] [CPT] [寿命] [速度表达式] [计算间隔] [组]
10./particleex rgbaparameter <颗粒> <坐标> <begin> <end> <表达式> [计算间隔] [寿命] [速度表达式] [计算间隔] [组]
11./particleex rgbapolarparameter <颗粒> <坐标> <begin> <end> <表达式> [计算间隔] [寿命] [速度表达式] [计算间隔] [组]
12./particleex rgbatickparameter <颗粒> <坐标> <begin> <end> <表达式> [计算间隔] [CPT] [寿命] [速度表达式] [计算间隔] [组]
13./particleex rgbatickpolarparameter <颗粒> <坐标> <begin> <end> <表达式> [计算间隔] [CPT] [寿命] [速度表达式] [计算间隔] [组]
14./particleex image <颗粒> <坐标> <path> [比例] [x轴旋转] [y轴旋转] [z轴旋转] [翻转] [DPB] [速度] [寿命] [速度表达式] [计算间隔] [组]
15./particleex imagematrix <颗粒> <坐标> <path> [比例] [矩阵] [DPB] [速度] [寿命] [速度表达式] [计算间隔] [组]
16./particleex group remove <组> [条件表达式] [坐标]
17./particleex group change parameter|speedexpression <组> <表达式> [条件表达式] [坐标]


#最大粒子数量(原版为16384)

MaxParticleCount:1048576

#使用并行流更新粒子

ParallelParticleUpdate:false




@<红> <绿> <蓝> <透明度>或<颜色> 粒子颜色(RGBA) (0.0-1.0)

@<亮度>(仅1.12.2) 粒子亮度(部分粒子亮度无法修改) (0-240的整数)

@<vx> <vy> <vz>或<速度> 生成粒子的初速度

@<dx> <dy> <dz>或<范围> 生成粒子的范围 (大于等于0)

@<数量> 生成粒子的数量

@<寿命> 粒子的寿命 (大于等于-1的整数)
(0表示按照原寿命处理)
(-1表示不会自动消失 在<速度表达式>中设置destory为非0值即可消失)

@<表达式>或<条件表达式> 按照指定表达式生成粒子 (1.16.5需要用引号包裹)
(支持矩阵运算，如:(x,,y,,z)=(cos(t),0,-sin(t),,0,0.5,0,,sin(t),0,cos(t))*(t,,0,,0))

@<速度表达式> 粒子的运动速度,颜色,亮度变化所遵循的表达式 (亮度仅1.12.2)
(速度表达式中的自变量统一为t并且t从0开始递增)
(支持矩阵运算，如:(vx,,vy,,vz)=(0,0,-1,,0,0,0,,1,0,0)*(x,,y,,z))

@<计算间隔> 按照表达式控制粒子时自变量每次递增的值

@<tStart> <tEnd>或<begin> <end> 当表达式为参数方程时t的初始值和最终值 (终值>初值)

@<CPT> 在带有tick的子命令中控制每tick执行<表达式>的次数
(不带tick的子命令会在执行命令的同时执行完<表达式>)

@<path> 文件路径
(请将图片放入.minecraft\particleImages文件夹下)
(以上文件均存放与客户端中)

@<比例> 图片缩放比例

@<x轴旋转> <y轴旋转> <z轴旋转> 图片旋转 (90的整倍数数)

@<翻转> 图片翻转 (not或horizontally或vertical 分别为不变,水平翻转,垂直翻转)

@<矩阵> 用于线性变换的矩阵 (1.16.5需要引号包裹)

(当整度数旋转或翻转满足不了你的时候可以用此参数对粒子坐标进行线性变换)
(矩阵用,,分割行 用,分割列)

@<DPB> 每方块粒子数 (大于0)(默认为10)

@<参数> 对应原版指令的<参数> (仅1.12.2)
(一般用不到)



normal
按照原版的方式生成粒子 (可调颜色,初速度,寿命以及控制运动轨迹)

conditional
根据给出的条件表达式生成粒子 (<条件表达式>参数最后一条语句的值作为整个参数的返回值)
条件表达式可用符号如下:
自变量:"x","y","z","s1","s2","dis"
逻辑运算符:"&","|","!"
关系运算符:">","<","==","!=",">=","<="
算数运算符:"+","-","*","/","^","%"
赋值运算符:"="
可用函数见/particleex funlist
x,y,z为直角坐标系中的自变量,s1,s2,dis为极坐标中自变量,两者可一起使用
如dis<1&y>0表示生成一个半圆

parameter|tickparameter|parameterrgb|tickparameterrgb|rgbaparameter|rgbatickparameter
根据给出的参数方程生成粒子
参数方程可用符号如下:
自变量:"t"
因变量:"x","y","z"
带rgb或rgba的特有因变量:"cr","cg","cb","alpha","br"(br仅1.12.2)
逻辑运算符:"&","|","!"
关系运算符:">","<","==","!=",">=","<="
算数运算符:"+","-","*","/","^","%"
赋值运算符:"="
可用函数见/particleex funlist
多个赋值表达式用;分隔
无tick前缀的模式会在执行的同时全部生成,有tick前置的模式会根据<CPT>参数逐渐生成(可做动画效果)
无rgb或rgba的模式的粒子颜色和亮度在指令的参数中指定,有rgb或rgba后缀的模式的粒子颜色在表达式中指定(可随t变化)
如x=t;z=sin(t)表示生成一条正弦曲线
当子命令带tick,t的范围从0到6.28,<计算间隔>为0.0314,<CPT>为10时
该指令会在第一tick生成sin(t)从0到0.314(<计算间隔>*<CPT>)的图像,依此类推

polarparameter|tickpolarparameter|polarparameterrgb|tickpolarparameterrgb|rgbapolarparameter|rgbatickpolarparameter
根据给出的参数方程在极坐标系中生成粒子
参数方程可用符号除了应变量变为"s1","s2","dis"外其余与上一条完全一致

image|imagematrix
根据图片生成粒子效果
强烈推荐不开光影的末影烛

/particleex tickparameter endRod %f %f %f 1 0 1 1 240 0 0 0 %f %f <表达式> 0.05 10 0

/particleex tickparameter endRod ~ ~4 ~ 0.4 0.8 0.3 1 240 0 0 0 <tStart> <tEnd> <表达式> 0.05 10 -1